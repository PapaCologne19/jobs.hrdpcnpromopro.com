Imports MySql.Data.MySqlClient
Public Class Service1
    Public axCZKEM1 As New zkemkeeper.CZKEM
    Private fp_is_connected = False
    Private fp_machine_number = 1 'In fact,when you are using the tcp/ip communication,this parameter will be ignored,that is any integer will all right.Here we use 1.
    Dim timer As System.Timers.Timer
    Dim EventLog1 As System.Diagnostics.EventLog

    Private Sub getRecordsToday()
        timer.Stop()
        Try

            'axCZKEM1.EnableDevice(fp_machine_number, False)
            Dim iGLCount = 0
            Dim sdwEnrollNumber As Integer
            Dim idwVerifyMode As Integer
            Dim idwInOutMode As Integer
            Dim idwYear As Integer
            Dim idwMonth As Integer
            Dim idwDay As Integer
            Dim idwHour As Integer
            Dim idwMinute As Integer
            Dim idwSecond As Integer
            Dim idwWorkcode As Integer
            Dim iMachineNumber As Integer
            Dim idwEMachineNumber As Integer
            Dim employee_id As Integer
            Dim idwErrorCode As Integer

            If axCZKEM1.ReadGeneralLogData(fp_machine_number) Then 'read all the attendance records to the memory
                Me.EventLog1.WriteEntry("line 31")

                'get records from the memory
                Dim con As New MySqlConnection
                Dim con2 As New MySqlConnection
                'con.ConnectionString = "server=" & My.Settings.HRISIP & ";user id=root;password=p@ssword;database=" & My.Settings.HRISDB
                con.ConnectionString = "server=166.62.28.107 ;user id=physical_pcn;database=pcn_hcms;Pwd=P@ssw0rd;Convert Zero Datetime=True"
                'con2.ConnectionString = "server=127.0.0.1;user id=root;database=" & My.Settings.HRISDB2 & ";Convert Zero Datetime=True"
                con.Open()
                Dim dr As MySqlDataReader

                'While axCZKEM1.SSR_GetGeneralLogData(fp_machine_number, sdwEnrollNumber, idwVerifyMode, idwInOutMode, idwYear, idwMonth, idwDay, idwHour, idwMinute, idwSecond, idwWorkcode)
                'While axCZKEM1.GetGeneralLogData(iMachineNumber, idwEMachineNumber, sdwEnrollNumber, idwEMachineNumber, idwVerifyMode, idwInOutMode, idwYear, idwMonth, idwDay, idwHour, idwMinute)
                While axCZKEM1.SSR_GetGeneralLogData(iMachineNumber, sdwEnrollNumber, idwVerifyMode, idwInOutMode, idwYear, idwMonth, idwDay, idwHour, idwMinute, idwSecond, idwWorkcode)

                    Me.EventLog1.WriteEntry("line 44")

                    'If Date.Parse(Date.Now).Date >= idwYear.ToString() & "-" + idwMonth.ToString() & "-" & idwDay.ToString() Then
                    If idwYear.ToString() & "-" + idwMonth.ToString() & "-" & idwDay.ToString() >= Date.Parse(Date.Now).AddDays(-14).Date Then
                        'mysql_insert(sdwEnrollNumber, idwYear.ToString() & "-" + idwMonth.ToString() & "   -" & idwDay.ToString() & " " & idwHour.ToString() & ":" & idwMinute.ToString() & ":" & idwSecond.ToString())
                        'Me.EventLog1.WriteEntry("line 49")

                        Dim my_cmd As New MySqlCommand
                        my_cmd.Connection = con
                        my_cmd.CommandText = "SELECT id FROM employees WHERE is_deleted=0 AND acu_id=" & sdwEnrollNumber & " LIMIT 1"
                        dr = my_cmd.ExecuteReader()
                        'Me.EventLog1.WriteEntry(dr.HasRows & "has Rows")
                        Me.EventLog1.WriteEntry(iMachineNumber & " imachinnumber," & idwEMachineNumber & " idwmachinnumber," & sdwEnrollNumber & " sdwenrollnumber," & idwEMachineNumber & " idwemachinenumber," & idwVerifyMode & " idwverify mode," & idwInOutMode & " inoutmoude," & idwYear & " idwyear," & idwMonth & " idwmonth," & idwDay & " idwday," & idwHour & " idwhour," & idwMinute & " idwminute")

                        If dr.HasRows Then
                            'Me.EventLog1.WriteEntry("line 56")

                            dr.Read()
                            employee_id = dr.Item("id")
                            dr.Dispose()
                            mysql_insert(employee_id, idwYear.ToString() & "-" + idwMonth.ToString() & "-" & idwDay.ToString() & " " & idwHour.ToString() & ":" & idwMinute.ToString() & ":00")
                        Else
                            'Me.EventLog1.WriteEntry("line 63")

                            dr.Dispose()
                            Continue While
                        End If
                        my_cmd.Dispose()




                    End If
                End While
            Else
                axCZKEM1.GetLastError(idwErrorCode)
                Me.EventLog1.WriteEntry(idwErrorCode & " Cant Connect to ACU")
                connect_fp()
            End If

            axCZKEM1.EnableDevice(fp_machine_number, True) 'enable the device
        Catch ex As Exception
            Me.EventLog1.WriteEntry(ex.Message)
        End Try
        timer.Start()
        'Me.EventLog1.WriteEntry("GetRecordsToday")
    End Sub
    Private Sub setTime()
        Dim curDate = Date.Now
        axCZKEM1.SetDeviceTime2(fp_machine_number, Date.Parse(curDate).Year, Date.Parse(curDate).Month, Date.Parse(curDate).Day, Date.Parse(curDate).Hour, Date.Parse(curDate).Minute, Date.Parse(curDate).Second)
    End Sub
    Private Sub connect_fp()
        Try
            fp_is_connected = axCZKEM1.Connect_Net(My.Settings.MachineIP.Trim, Convert.ToInt32(My.Settings.MachinePort.Trim))
            If fp_is_connected = True Then
                'FP is connected
                Me.EventLog1.WriteEntry("Connection to Finger Print Scanner Succesful.")
                Try
                    Dim bool As Boolean
                    bool = axCZKEM1.RegEvent(fp_machine_number, 65535)
                    'Me.EventLog1.WriteEntry("Add Handler:" & bool)
                    'AddHandler axCZKEM1.OnFinger, AddressOf myverify
                    If bool = True Then
                        AddHandler axCZKEM1.OnAttTransactionEx, AddressOf InsertToHRIS
                    End If
                Catch ex As Exception
                    Me.EventLog1.WriteEntry(ex.Message)
                End Try


            Else
                'MsgBox("Connection to Finger Print Scanner Failed.")
                Me.EventLog1.WriteEntry("Connection to Finger Print Scanner Failed.")
                connect_fp()
            End If

        Catch ex As Exception
            'MsgBox("An error occured when connecting to the finger print scanner.")
            '         Me.EventLog1.WriteEntry("An error occured when connecting to the finger print scanner.")
            'MsgBox(ex.Message)
            Me.EventLog1.WriteEntry(ex.Message)

        End Try
    End Sub
    Private Sub myverify(ByVal iUserID As Integer)

        If iUserID <> -1 Then
            Me.EventLog1.WriteEntry("verify")
        Else
            Me.EventLog1.WriteEntry("verify failed")
        End If
    End Sub
    Private Sub disconnect_fp()
        Try

            If fp_is_connected = True Then
                'FP is connected
                axCZKEM1.Disconnect()

            End If
            Me.fp_is_connected = False
        Catch ex As Exception
            'MsgBox("An error occured when disconnecting to the finger print scanner.")
            'Me.EventLog2.WriteEntry("An error occured when disconnecting to the finger print scanner.")
            Me.EventLog1.WriteEntry("disconnected from fp")
            'MsgBox(ex.Message)

        End Try
    End Sub
    Private Sub InsertToHRIS(ByVal sEnrollNumber As String, ByVal iIsInValid As Integer, ByVal iAttState As Integer, ByVal iVerifyMethod As Integer,
                      ByVal iYear As Integer, ByVal iMonth As Integer, ByVal iDay As Integer, ByVal iHour As Integer, ByVal iMinute As Integer, ByVal iSecond As Integer, ByVal iWorkCode As Integer)
        Try
            Me.EventLog1.WriteEntry("Capture Verify")
            mysql_insert(sEnrollNumber, iYear.ToString() & "-" & iMonth.ToString() & "-" & iDay.ToString() & " " & iHour.ToString() & ":" & iMinute.ToString() & ":" & iSecond.ToString())
        Catch ex As Exception
            Me.EventLog1.WriteEntry("inserttoHRIS" & ex.Message)
        End Try

    End Sub
    Private Sub mysql_insert(employee_id, action_time)
        'Dim employee_id = 16
        'Dim action_time = "2016-01-31 01:00:00"
        Dim con As New MySqlConnection
        'con.ConnectionString = "server=" & My.Settings.HRISIP & ";user id=root;password=p@ssword;database=" & My.Settings.HRISDB & ";Convert Zero Datetime=True"
        con.ConnectionString = "server=166.62.28.107 ;user id=physical_pcn;database=pcn_hcms;Pwd=P@ssw0rd;Convert Zero Datetime=True"
        Dim sql_query As String

        Try
            con.Open()
            Dim my_cmd As New MySqlCommand
            Dim dr As MySqlDataReader
            my_cmd.Connection = con
            my_cmd.CommandText = "SELECT id,out_time,in_time FROM attendance WHERE DATE(in_time)=DATE('" & action_time & "') AND employees_id=" & employee_id
            dr = my_cmd.ExecuteReader()
            'dr = my_cmd.ExecuteReader("SELECT id FROM attendance WHERE DATE(in_time)=DATE('" & iYear.ToString() & "-" & iMonth.ToString() & "-" & iDay.ToString() & "') AND employee=" & sEnrollNumber)
            'MsgBox(dr.HasRows)
            'Return

            my_cmd.Dispose()
            Me.EventLog1.WriteEntry("Mysql Insert")
            Me.EventLog1.WriteEntry(dr.HasRows & " has rows")
            If dr.HasRows Then
                'update out_time
                dr.Read()
                Dim attendace_id = dr.Item("id")
                Dim out_time = dr.Item("out_time")
                Dim in_time = dr.Item("in_time")
                'MsgBox(attendace_id)
                dr.Dispose()

                'Me.EventLog1.WriteEntry(Date.Parse(action_time) & " > " & Date.Parse(out_time))
                '& "=" & Date.Parse(action_time) > Date.Parse(out_time)
                'Me.EventLog1.WriteEntry(action_time & " " & out_time)

                'If action time less than current timein update time in
                Me.EventLog1.WriteEntry(Date.Parse(action_time) < Date.Parse(in_time))
                If (Date.Parse(action_time) < Date.Parse(in_time)) Then
                    my_cmd.CommandText = "UPDATE attendance SET employees_id=@employee,in_time=@in_time WHERE id=@id"
                    my_cmd.Parameters.AddWithValue("@employee", employee_id)
                    my_cmd.Parameters.AddWithValue("@in_time", action_time)
                    my_cmd.Parameters.AddWithValue("@id", attendace_id)
                    my_cmd.ExecuteNonQuery()
                    Me.EventLog1.WriteEntry("Update time in")
                Else
                    If (Date.Parse(action_time) > Date.Parse(out_time) Or out_time = "12:00:00 AM") Then
                        my_cmd.CommandText = "UPDATE attendance SET employees_id=@employee,out_time=@in_time WHERE id=@id"
                        my_cmd.Parameters.AddWithValue("@employee", employee_id)
                        my_cmd.Parameters.AddWithValue("@in_time", action_time)
                        my_cmd.Parameters.AddWithValue("@id", attendace_id)
                        my_cmd.ExecuteNonQuery()
                        Me.EventLog1.WriteEntry("Update time out")
                        sql_query = "UPDATE attendance SET employee=" & employee_id & ",out_time=" & action_time & " WHERE id=" & attendace_id
                        'Me.EventLog1.WriteEntry(my_cmd.CommandText & "e:" & employee_id & "out_time:" & action_time & "id:" & attendace_id)
                    End If
                End If
            Else

                'insert time in
                dr.Dispose()
                my_cmd.CommandText = "INSERT INTO attendance(employees_id,in_time) VALUES(@employee,@in_time)"
                my_cmd.Parameters.AddWithValue("@employee", employee_id)
                my_cmd.Parameters.AddWithValue("@in_time", action_time)
                my_cmd.ExecuteNonQuery()
                Me.EventLog1.WriteEntry("Insert Time in")
                sql_query = "INSERT INTO attendance(employees_id,in_time) VALUES(" & employee_id & "," & action_time & ")"
            End If
            'cmd.Connection = con

        Catch ex As Exception
            Me.EventLog1.WriteEntry("mysql_insert " & ex.ToString)

            'MsgBox("An error occured when saving.")
        Finally
            con.Close()
        End Try


    End Sub
    Public Sub New()

        MyBase.New()
        Try
            InitializeComponent()
            Me.EventLog1 = New System.Diagnostics.EventLog
            If Not System.Diagnostics.EventLog.SourceExists("MySource") Then
                System.Diagnostics.EventLog.CreateEventSource("MySource", "MyNewLog")
            End If
            Me.EventLog1.Source = "MySource"
            Me.EventLog1.Log = "MyNewLog"
        Catch ex As Exception
            Me.EventLog1.WriteEntry("new() " & ex.Message)
        End Try

    End Sub
    Protected Overrides Sub OnStart(ByVal args() As String)
        Me.EventLog1.WriteEntry("HRIS Service Start", EventLogEntryType.Information)
        connect_fp()
        'getRecordsToday()
        'setTime()
        timer = New System.Timers.Timer()
        'timer.Interval = 5000 ' 5 seconds
        timer.Interval = 1000 ' 5 seconds
        AddHandler timer.Elapsed, AddressOf Me.OnTimer
        timer.Start()
        Dim bool As Boolean
        bool = axCZKEM1.RegEvent(fp_machine_number, 65535)
        If bool = True Then
            AddHandler axCZKEM1.OnAttTransactionEx, AddressOf InsertToHRIS
        End If
    End Sub
    Private Sub OnTimer(sender As Object, e As Timers.ElapsedEventArgs)
        ' TODO: Insert monitoring activities here.
        'EventLog1.WriteEntry("Monitoring the System", EventLogEntryType.Information)
        Try
            axCZKEM1.EnableDevice(fp_machine_number, True) 'enable the device
            If Me.fp_is_connected = True Then
                getRecordsToday()
            Else
                Me.EventLog1.WriteEntry("FP is not Connected. Reconnecting...")
                connect_fp()
            End If
        Catch ex As Exception
            EventLog1.WriteEntry(ex.Message, EventLogEntryType.Information)
        End Try
        'MsgBox("asdsd")
    End Sub
    Protected Overrides Sub OnStop()
        ' Add code here to perform any tear-down necessary to stop your service.
        Me.EventLog1.WriteEntry("HRIS Service Stop", EventLogEntryType.Information)
        disconnect_fp()
    End Sub

    Private Sub Service1_Disposed(sender As Object, e As EventArgs) Handles Me.Disposed
        Me.EventLog1.WriteEntry("HRIS Service Disposed")
    End Sub
End Class
